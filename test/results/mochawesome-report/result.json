{
  "stats": {
    "suites": 5,
    "tests": 12,
    "passes": 12,
    "pending": 0,
    "failures": 0,
    "start": "2022-05-06T11:41:46.694Z",
    "end": "2022-05-06T11:42:18.641Z",
    "duration": 31947,
    "testsRegistered": 12,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2770e04c-93fd-4aba-b543-3686a2c9b77b",
      "title": "",
      "fullFile": "C:\\Users\\flatron\\Desktop\\paletti_tests_se\\test\\index.js",
      "file": "\\test\\index.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1fbf7349-9c45-4a09-9cbc-5d179d6e7f2a",
          "title": "Test suites for homepage https://mjkimi.github.io/paletti/",
          "fullFile": "C:\\Users\\flatron\\Desktop\\paletti_tests_se\\test\\index.js",
          "file": "\\test\\index.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Test suites for homepage https://mjkimi.github.io/paletti/\"",
              "fullTitle": "Test suites for homepage https://mjkimi.github.io/paletti/ \"before all\" hook in \"Test suites for homepage https://mjkimi.github.io/paletti/\"",
              "timedOut": false,
              "duration": 12533,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.go_to_url();\nawait driver.wait_page_load();",
              "err": {},
              "uuid": "804f1b8b-8281-4999-a13a-49d8101efa28",
              "parentUUID": "1fbf7349-9c45-4a09-9cbc-5d179d6e7f2a",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"Test suites for homepage https://mjkimi.github.io/paletti/\"",
              "fullTitle": "Test suites for homepage https://mjkimi.github.io/paletti/ \"before each\" hook in \"Test suites for homepage https://mjkimi.github.io/paletti/\"",
              "timedOut": false,
              "duration": 1002,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// wait 1 sec before every test:\nawait new Promise((resolve) => setTimeout(resolve, 1000));\nconsole.log('----------------------');",
              "err": {},
              "uuid": "bfaabf25-e8a9-491d-812c-df19068517d4",
              "parentUUID": "1fbf7349-9c45-4a09-9cbc-5d179d6e7f2a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Test suites for homepage https://mjkimi.github.io/paletti/\"",
              "fullTitle": "Test suites for homepage https://mjkimi.github.io/paletti/ \"after all\" hook in \"Test suites for homepage https://mjkimi.github.io/paletti/\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.quit();",
              "err": {},
              "uuid": "e6a8ee7c-59de-48e7-82f8-ab0150803281",
              "parentUUID": "1fbf7349-9c45-4a09-9cbc-5d179d6e7f2a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "6a177652-bbca-419e-aa5e-0eec9a6aec1f",
              "title": "Slide menu",
              "fullFile": "C:\\Users\\flatron\\Desktop\\paletti_tests_se\\test\\index.js",
              "file": "\\test\\index.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should slide in when clicking menu button",
                  "fullTitle": "Test suites for homepage https://mjkimi.github.io/paletti/ Slide menu should slide in when clicking menu button",
                  "timedOut": false,
                  "duration": 360,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Open slide menu:\nmenuBtn = await driver.findElement(By.id('main-menu-btn'));\nmenuBtn.click();\n// Find class 'show' in menu:\nmenu = await driver.findElement(\n  By.xpath('//div[contains(@class, \"side-menu\")]')\n);\nconst menuClasses = await menu.getAttribute('class').then((val) => val);\nexpect(menuClasses).to.include('show');",
                  "err": {},
                  "uuid": "9796feab-bcd7-481d-b8c8-3058e9c54a64",
                  "parentUUID": "6a177652-bbca-419e-aa5e-0eec9a6aec1f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should close when close button clicked",
                  "fullTitle": "Test suites for homepage https://mjkimi.github.io/paletti/ Slide menu should close when close button clicked",
                  "timedOut": false,
                  "duration": 277,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// // Close button:\nawait driver.findElement(By.id('btn-close')).click();\nconst menuClasses = await menu.getAttribute('class').then((val) => val);\nexpect(menuClasses).to.not.include('show');",
                  "err": {},
                  "uuid": "da12c0e7-b882-4609-a84a-32b0ee145918",
                  "parentUUID": "6a177652-bbca-419e-aa5e-0eec9a6aec1f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should navigate to a link",
                  "fullTitle": "Test suites for homepage https://mjkimi.github.io/paletti/ Slide menu should navigate to a link",
                  "timedOut": false,
                  "duration": 1089,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// 3rd link in slideMenu & its navigated div:\nconst linkPckg = await driver.findElement(\n  By.xpath('//ul[@class=\"menu-nav\"]/li[3]/a')\n);\nconst pckg = await driver.findElement(By.id('packaging'));\nmenuBtn.click();\nlinkPckg.click();\nawait driver.wait(until.elementIsVisible(pckg));\n// Linked packaging section:\n// Check if element is in viewport after clicking a link:\nawait driver\n  .executeScript(() => {\n    const divPckg = document.getElementById('packaging');\n    const rect = divPckg.getBoundingClientRect();\n    return (\n      rect.top >= 0 &&\n      rect.left >= 0 &&\n      rect.bottom <=\n        (window.innerHeight || document.documentElement.clientHeight) &&\n      rect.right <=\n        (window.innerWidth || document.documentElement.clientWidth)\n    );\n  })\n  .then((result) => {\n    expect(result).to.be.true;\n  });",
                  "err": {},
                  "uuid": "c2c5be75-7955-47ad-870a-5c1721437b13",
                  "parentUUID": "6a177652-bbca-419e-aa5e-0eec9a6aec1f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9796feab-bcd7-481d-b8c8-3058e9c54a64",
                "da12c0e7-b882-4609-a84a-32b0ee145918",
                "c2c5be75-7955-47ad-870a-5c1721437b13"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1726,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "c7cf5771-0790-40a3-a084-27ebb796ef7b",
              "title": "Chocolate",
              "fullFile": "C:\\Users\\flatron\\Desktop\\paletti_tests_se\\test\\index.js",
              "file": "\\test\\index.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " \"Buy now\" function executes correctly",
                  "fullTitle": "Test suites for homepage https://mjkimi.github.io/paletti/ Chocolate  \"Buy now\" function executes correctly",
                  "timedOut": false,
                  "duration": 438,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Scroll chocolate colection into view:\nconst sectionShop = await driver.findElement(By.id('shop'));\nthis.scroll_into_view(sectionShop);\n// Buy 1st chocolate in a collection:\nconst buyNowBtn = await driver.findElement(\n  By.xpath('//button[contains(@class, \"buy-now\") and @data-id=\"1\"]')\n);\nbuyNowBtn.click();\nchocoDataId = '@data-id=\"1\"';\nconst btnText = await driver\n  .findElement(\n    By.xpath(\n      `//button[contains(@class, \"buy-now\") and ${chocoDataId}]/span`\n    )\n  )\n  .getText()\n  .then((val) => val.toLowerCase());\ncart = await driver.findElement(By.className('cart'));\ncartClasses = await cart.getAttribute('class').then((val) => val);\n// -----------------Expect----------------:\n// 'btn attr disabled'\nexpect(\n  await buyNowBtn.getAttribute('disabled').then((val) => JSON.parse(val))\n).to.be.true;\n// 'spanText = in cart'\nexpect(btnText).to.equal('in cart');\n// 'cart is open'\nexpect(cartClasses).to.include('showCart');\n// ----------------------------------------",
                  "err": {},
                  "uuid": "d60b787d-ff90-4763-8e4b-103e218dc5fe",
                  "parentUUID": "c7cf5771-0790-40a3-a084-27ebb796ef7b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "from collection should successfully be added to the cart",
                  "fullTitle": "Test suites for homepage https://mjkimi.github.io/paletti/ Chocolate from collection should successfully be added to the cart",
                  "timedOut": false,
                  "duration": 240,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const success = await cart.findElements(\n  By.xpath(`//span[${chocoDataId}]`)\n);\nexpect(success.length).to.be.above(0);\n// Close cart:\nawait driver.findElement(By.xpath('//body')).click();",
                  "err": {},
                  "uuid": "b81d4fa0-0b2d-4b94-8182-7d600d9197d0",
                  "parentUUID": "c7cf5771-0790-40a3-a084-27ebb796ef7b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d60b787d-ff90-4763-8e4b-103e218dc5fe",
                "b81d4fa0-0b2d-4b94-8182-7d600d9197d0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 678,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "4490fd06-ba91-48ad-a98f-836efc99c1e0",
              "title": "Chocolate letter",
              "fullFile": "C:\\Users\\flatron\\Desktop\\paletti_tests_se\\test\\index.js",
              "file": "\\test\\index.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "message should type correctly",
                  "fullTitle": "Test suites for homepage https://mjkimi.github.io/paletti/ Chocolate letter message should type correctly",
                  "timedOut": false,
                  "duration": 1426,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "\"../screenshots/custom_letter.png\"",
                  "code": "const sendingText = 'Happy birthday!';\nconst sectionLetter = await driver.findElement(By.id('personalize'));\nscroll_into_view(sectionLetter);\nconst messageInput = await driver.findElement(By.id('design-input'));\nawait messageInput.sendKeys(sendingText);\n// Take a screenshot of chocolate letter:\nawait driver.sleep(1000);\nawait driver.takeScreenshot().then(function (image) {\n  require('fs').writeFileSync(\n    path.join(__dirname, '../results/screenshots', 'custom_letter.png'),\n    image,\n    'base64'\n  );\n});\n// Expect correct typing on the chocolate:\nconst chocoLetter = await driver\n  .findElement(By.id('your-message'))\n  .getText()\n  .then((val) => val);\naddContext(this, '../screenshots/custom_letter.png');\nexpect(chocoLetter).to.be.equal(sendingText);",
                  "err": {},
                  "uuid": "606fceca-3e21-4b05-af45-bd5763a07974",
                  "parentUUID": "4490fd06-ba91-48ad-a98f-836efc99c1e0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should successfully be added to the cart",
                  "fullTitle": "Test suites for homepage https://mjkimi.github.io/paletti/ Chocolate letter should successfully be added to the cart",
                  "timedOut": false,
                  "duration": 725,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const HAPPY_PATH = [\n  'John Doe',\n  '1510 Main str',\n  '454647',\n  'NY',\n  'United States',\n];\nconst nextBtn = await driver.findElement(By.id('next-form'));\nnextBtn.click();\nconst form = await driver.findElement(By.id('receiver'));\n// Select all form required fields:\nconst listOfElem = await form\n  .findElements(\n    By.xpath(\n      '//div[contains(@class, \"input-wrapper\")]//*[self::input or self::select]'\n    )\n  )\n  .then((formFields) => {\n    formFields.forEach((field, index) => {\n      field.getTagName().then((type) => {\n        switch (type) {\n          case 'input': // Fill in 'inputs'\n            let value = HAPPY_PATH[index - 1];\n            field.sendKeys(value);\n          case 'select': // Choose 'select' option\n            field\n              .findElement(\n                By.xpath(\n                  `option[normalize-space(text())=\"${HAPPY_PATH[4]}\"]`\n                )\n              )\n              .click();\n            break;\n        }\n      });\n    });\n  });\nconst requiredMsg = await form\n  .findElement(By.xpath('//form/h4[contains(@class, \"required\")]'))\n  .getCssValue('visibility')\n  .then((val) => val);\nconst addToCartBtn = await form.findElement(\n  By.xpath('//form//button[@id=\"add-to-cart\"]')\n);\naddToCartBtn.click();\nexpect(requiredMsg).to.be.equal('hidden');",
                  "err": {},
                  "uuid": "a7887166-3b5a-4dee-b814-7d5a07913e46",
                  "parentUUID": "4490fd06-ba91-48ad-a98f-836efc99c1e0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "606fceca-3e21-4b05-af45-bd5763a07974",
                "a7887166-3b5a-4dee-b814-7d5a07913e46"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2151,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "2caaa153-1277-44b1-b572-ff3e9518781a",
              "title": "Cart",
              "fullFile": "C:\\Users\\flatron\\Desktop\\paletti_tests_se\\test\\index.js",
              "file": "\\test\\index.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "item should increase the amount by pressing + button",
                  "fullTitle": "Test suites for homepage https://mjkimi.github.io/paletti/ Cart item should increase the amount by pressing + button",
                  "timedOut": false,
                  "duration": 494,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "firstItem = await cartItems().then((val) => val[0]);\n// + :\nconst increase = await firstItem.findElement(\n  By.xpath('//i[contains(@class, \"fa-plus\")]')\n);\n// -----Quantity increase (+2):\nconst clickedAmountPlus = clickCalc(2, increase, true);\n// get the amount of items after increasing quantity(clicking) and turn it into number value:\nconst quantityPlus = Number(await getAmount());\nexpect(quantityPlus).to.equal(clickedAmountPlus);",
                  "err": {},
                  "uuid": "dc867f5a-23b2-4fc9-a5f8-c6e71b0b9979",
                  "parentUUID": "2caaa153-1277-44b1-b572-ff3e9518781a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "item should decrease the amount by pressing - button",
                  "fullTitle": "Test suites for homepage https://mjkimi.github.io/paletti/ Cart item should decrease the amount by pressing - button",
                  "timedOut": false,
                  "duration": 252,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const decrease = await firstItem.findElement(\n  By.xpath('//i[contains(@class, \"fa-minus\")]')\n);\n// -----Quantity decrease (-1):\nconst clickedAmountMinus = clickCalc(1, decrease);\nconst quantityMinus = Number(await getAmount());\nexpect(quantityMinus).to.equal(clickedAmountMinus);",
                  "err": {},
                  "uuid": "f129e382-d3bb-4fb7-831d-a100d80f794c",
                  "parentUUID": "2caaa153-1277-44b1-b572-ff3e9518781a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "sum of prices should be equal to total",
                  "fullTitle": "Test suites for homepage https://mjkimi.github.io/paletti/ Cart sum of prices should be equal to total",
                  "timedOut": false,
                  "duration": 36,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const sum = await driver.executeScript(() => {\n  // Select ALL chocolates in the cart:\n  const allItems = Array.from(\n    document.getElementsByClassName('cart-item')\n  );\n  // Get the prices & amounts:\n  const sumArr = allItems.map((item) => {\n    const priceText = item.querySelector('.price').innerText;\n    const price = Number(priceText.replace('$', ''));\n    const amount = Number(item.querySelector('.item-amount').innerText);\n    return amount * price;\n  });\n  // Return calculated sum of items:\n  return sumArr.reduce((a, b) => a + b, 0);\n});\n// Get the total price:\npriceFooter = await driver.findElement(By.className('cart-footer'));\nconst totalPriceText = await priceFooter\n  .findElement(By.className('cart-total'))\n  .getText();\nconst totalPrice = Number(totalPriceText.replace('$', ''));\nexpect(sum).to.equal(totalPrice);",
                  "err": {},
                  "uuid": "25bea5de-e949-4cfb-a14b-63a4879b26dd",
                  "parentUUID": "2caaa153-1277-44b1-b572-ff3e9518781a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "remove item button functions correctly",
                  "fullTitle": "Test suites for homepage https://mjkimi.github.io/paletti/ Cart remove item button functions correctly",
                  "timedOut": false,
                  "duration": 502,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// remove\nconst removeBtn = await firstItem.findElement(\n  By.className('remove-item')\n);\nconst chocoId = await removeBtn.getAttribute('data-id');\nremoveBtn.click();\nawait driver.wait(until.stalenessOf(removeBtn));\nconst cartContent = await driver.findElement(\n  By.className('cart-content')\n);\nconst removedChoco = await cartContent.findElements(\n  By.xpath(`//span[@data-id=${chocoId}]`)\n);\nexpect(removedChoco.length).to.equal(0);",
                  "err": {},
                  "uuid": "7513ca2e-0a63-4c45-86e7-4b96c1d74576",
                  "parentUUID": "2caaa153-1277-44b1-b572-ff3e9518781a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "clear all button functions correctly",
                  "fullTitle": "Test suites for homepage https://mjkimi.github.io/paletti/ Cart clear all button functions correctly",
                  "timedOut": false,
                  "duration": 266,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const clearBtn = await priceFooter.findElement(\n  By.className('clear-cart')\n);\nclearBtn.click();\nawait driver.wait(until.stalenessOf(firstItem));\nconst emptyCart = await cartItems().then((el) => el.length);\nexpect(emptyCart).to.equal(0);",
                  "err": {},
                  "uuid": "2cbcc8f6-d833-485a-a895-7cb936cfe7c9",
                  "parentUUID": "2caaa153-1277-44b1-b572-ff3e9518781a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dc867f5a-23b2-4fc9-a5f8-c6e71b0b9979",
                "f129e382-d3bb-4fb7-831d-a100d80f794c",
                "25bea5de-e949-4cfb-a14b-63a4879b26dd",
                "7513ca2e-0a63-4c45-86e7-4b96c1d74576",
                "2cbcc8f6-d833-485a-a895-7cb936cfe7c9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1550,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 60000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "result",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "./test/results/mochawesome-report",
        "reportFilename": "result"
      },
      "version": "6.2.0"
    }
  }
}